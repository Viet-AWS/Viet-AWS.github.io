[
{
	"uri": "/",
	"title": "[Viet-AWS] AWS Hands-on tutorials for Vietnamese",
	"tags": [],
	"description": "",
	"content": "[Viet-AWS] AWS Hands-on tutorials for Vietnamese Get started with step-by-step tutorials to launch your first application.\nFilter by:  Category Cloud Level Content Type  "
},
{
	"uri": "/1-category/1.1-securityidentitycompliance/1.1.1-createusergroupandattachpolicies/",
	"title": "Create Users, User Groups and Attach Policies",
	"tags": [],
	"description": "",
	"content": "AWS Identity and Access Management (IAM) is a web service that enables Amazon Web Services (AWS) customers to manage users and user permissions in AWS. With IAM, you can centrally manage users, security credentials such as access keys, and permissions that control which AWS resources users can access.\nTopics covered This lab will demonstrate:\n Exploring IAM Users and Groups Inspecting IAM policies and attach to the created groups Following a real-world scenario, adding users to groups with specific capabilities enabled Locating and using the IAM sign-in URL Experimenting with the effects of policies on service access   AWS Identity and Access Management\nAWS Identity and Access Management (IAM) can be used to:\n  Manage IAM Users and their access: You can create Users and assign them individual security credentials (access keys, passwords, and multi-factor authentication devices). You can manage permissions to control which operations a User can perform.\n  Manage IAM Roles and their permissions: An IAM Role is similar to a User, in that it is an AWS identity with permission policies that determine what the identity can and cannot do in AWS. However, instead of being uniquely associated with one person, a Role is intended to be assumable by anyone who needs it.\n  Manage federated users and their permissions: You can enable identity federation to allow existing users in your enterprise to access the AWS Management Console, to call AWS APIs and to access resources, without the need to create an IAM User for each identity.\n  Duration\nThis lab takes approximately 30 minutes to complete.\n Accessing the AWS Management Console   Access to https://console.aws.amazon.com.\n  Sign in by Root user or IAM User.\n   Task 1: Create Users and Groups In this task, you need to create Users and Groups in IAM.\n In the AWS Management Console, on the Services menu, select IAM.\n  In the navigation panel on the left, choose Users and Add users.\nWe need to create 3 IAM users:\n  user-1\n  user-2\n  user-3\n     Add 3 users, select checkbox Password - AWS Management Console access and uncheck checkbox Users must create a new password at next sign-in as below picture.\nSelect Next: Permissions.\n  Select Next: Tags.  Select Next: Review.  Select Create users.  Download .csv for save. Then Close.   Choose user-1.\nThis will bring to a summary page for user-1. The Permissions tab will be displayed.\n  Notice that user-1 does not have any permissions.\n  Choose the Groups tab.\nuser-1 also is not a member of any groups.\n  Choose the Security credentials tab.\nuser-1 is assigned a Console password\n  In the navigation pane on the left, choose User groups and Create group.\nWe need to create 3 IAM Groups:\n  EC2-Admin\n  EC2-Support\n  S3-Support\n    Enter S3-Support to textbox User group name.   Scroll down and enter S3 to textbox Filter policies and Enter to search.\nCheck to AmazonS3ReadOnlyAccess and select Create group.\nThis group has a Managed Policy associated with it, called AmazonEC2ReadOnlyAccess. Managed Policies are pre-built policies (built either by AWS or by your administrators) that can be attached to IAM Users and Groups. When the policy is updated, the changes to the policy are immediately apply against all Users and Groups that are attached to the policy.\n  Using similar steps to the ones above, create EC2-Admin with AmazonEC2FullAccess.  And EC2-Support with AmazonEC2ReadOnlyAccess.   When filter policies, can choose the plus (+) icon next to the AmazonEC2ReadOnlyAccess policy to view the policy details.\nNote: A policy defines what actions are allowed or denied for specific AWS resources.\nThis policy is granting permission to List and Describe information about EC2, Elastic Load Balancing, CloudWatch and Auto Scaling. This ability to view resources, but not modify them, is ideal for assigning to a Support role.\nThe basic structure of the statements in an IAM Policy is:\n  Effect says whether to Allow or Deny the permissions.\n  Action specifies the API calls that can be made against an AWS Service (eg cloudwatch:ListMetrics).\n  Resource defines the scope of entities covered by the policy rule (eg a specific Amazon S3 bucket or Amazon EC2 instance, or * which means any resource).\n  Choose the minus icon (-) to hide the policy details.\n  In the navigation pane on the left, choose User groups to view list of user groups.   Business Scenario For the remainder of this lab, you will work with these Users and Groups to enable permissions supporting the following business scenario:\nYour company is growing its use of Amazon Web Services, and is using many Amazon EC2 instances and a great deal of Amazon S3 storage. You wish to give access to new staff depending upon their job function:\n   User In Group Permissions     user-1 S3-Support Read-Only access to Amazon S3   user-2 EC2-Support Read-Only access to Amazon EC2   user-3 EC2-Admin Full Access to Amazon EC2     Task 2: Add Users to Groups You have recently hired user-1 into a role where they will provide support for Amazon S3. You will add them to the S3-Support group so that they inherit the necessary permissions via the attached AmazonS3ReadOnlyAccess policy.\n Add user-1 to the S3-Support Group  In the left navigation pane, choose User groups.\n  Choose the S3-Support group.\n  Choose the Users tab.\n  In the Users tab, choose Add users.\n   In the Add Users to S3-Support window, configure the following:\nSelect user-1.\nAt the bottom of the screen, choose Add Users.\nIn the Users tab you will see that user-1 has been added to the group.\n   Add user-2 to the EC2-Support Group You have hired user-2 into a role where they will provide support for Amazon EC2.\n Using similar steps to the ones above, add user-2 to the EC2-Support group.\nuser-2 should now be part of the EC2-Support group.\n   Add user-3 to the EC2-Admin Group You have hired user-3 as your Amazon EC2 administrator, who manage your EC2 instances.\n Using similar steps to the ones above, add user-3 to the EC2-Admin group.\nuser-3 should now be part of the EC2-Admin group.\n  In the navigation pane on the left, choose User groups.\nEach Group should now have a 1 in the Users column for the number of Users in each Group.\nIf you do not have a 1 beside each group, revisit the above instructions above to ensure that each user is assigned to a User group, as shown in the table in the Business Scenario section.\n   Task 3: Create an EC2 Instance In this task, you need to create an EC2 instance to test permission of IAM User.\n In the AWS Management Console, on the Services menu, select EC2.\n  In the page, on the Launch instance panel, select Launch instance and Launch instance.\n   In this task, we only create an EC2 instance with minimum customize.\nWe need to focus only 2 field:\n  Tag Name\n  Process without keypair\n  Then select Launch instance.\n   Task 4: Create a S3 bucket In this task, you need to create a S3 bucket to test permission of IAM User.\n In the AWS Management Console, on the Services menu, select S3.\n  In the page, on the Create a bucket panel, select Create bucket.\n   In this task, we only create a S3 bucket with minimum customize.\nWe need to focus only 1 field:\n Name of bucket  Then scroll down and select Create bucket.\n   Task 5: Sign-In and Test Users In this task, you will test the permissions of each IAM User.\n In the AWS Management Console, on the Services menu, select IAM.\n  In the navigation pane on the left, choose Dashboard.\nAn IAM users sign-in link is displayed on the right. It will look similar to: https://123456789012.signin.aws.amazon.com/console\nThis link can be used to sign-in to the AWS Account you are currently using.\n   Copy the Sign-in URL for IAM users in this account.\n  Open a private (Incognito) window.\nMozilla Firefox\n Choose the menu bars at the top-right of the screen Select New private window  Google Chrome\n Choose the ellipsis at the top-right of the screen Select New Incognito Window  Microsoft Edge\n Choose the ellipsis at the top-right of the screen Choose New InPrivate window  Microsoft Internet Explorer\n Choose the Tools menu option Choose InPrivate Browsing    Paste the Sign-in URL for IAM users in this account link into the address bar of your private browser session and press Enter.\nNext, you will sign-in as user-1, who has been hired as your Amazon S3 storage support staff.\n  Sign-in with:\n  IAM user name: user-1\n  Password: Open file credential.csv which downloaded.\n    In the Services menu, choose S3.\n  Choose the name of the bucket that exists in the account and browse the contents.\nSince your user is part of the S3-Support Group in IAM, they have permission to view a list of Amazon S3 buckets and the contents.\nNote: The bucket does not contain any objects.\nNow, test whether they have access to Amazon EC2.\n   In the Services menu, choose EC2.\n  In the left navigation pane, choose Instances.\nYou cannot see any instances. Instead, you see a message that states You are not authorized to perform this operation. This is because this user has not been granted any permissions to access Amazon EC2.\nYou will now sign-in as user-2, who has been hired as your Amazon EC2 support person.\n   Sign user-1 out of the AWS Management Console by completing the following actions:\n  At the top of the screen, choose user-1\n  Choose Sign Out\n     Paste the IAM users sign-in link into your private browser tab\u0026rsquo;s address bar and press Enter.\n  Sign-in with:\n  IAM user name: user-2\n  Password: Open file credential.csv which downloaded.\n    In the Services menu, choose EC2.\n  In the navigation pane on the left, choose Instances.\nYou are now able to see an Amazon EC2 instance because you have Read Only permissions. However, you will not be able to make any changes to Amazon EC2 resources.\nIf you cannot see an Amazon EC2 instance, then your Region may be incorrect. In the top-right of the screen, pull-down the Region menu and select the region that you noted at the start of the lab (for example, N. Virginia).\n   Select the instance named Viet-AWS EC2. In the Instance state menu above, select Stop instance.\n  In the Stop Instance window, select Stop.\nYou will receive an error stating You are not authorized to perform this operation. This demonstrates that the policy only allows you to view information, without making changes.\n   Choose the X to close the Failed to stop the instance message.\nNext, check if user-2 can access Amazon S3.\n  In the Services, choose S3.\nYou don\u0026rsquo;t see any buckets although you pre-created because user-2 does not have permission to access Amazon S3.\nYou will now sign-in as user-3, who has been hired as your Amazon EC2 administrator.\n   Sign user-2 out of the AWS Management Console by completing the following actions:\n  At the top of the screen, choose user-2\n  Choose Sign Out\n    Paste the IAM users sign-in link into your private window and press Enter.\n  Sign-in with:\n  IAM user name: user-3\n  Password: Open file credential.csv which downloaded.\n    In the Services menu, choose EC2.\n  In the navigation pane on the left, choose Instances.\nAs an EC2 Administrator, you should now have permissions to Stop the Amazon EC2 instance.\nSelect the instance named Viet-AWS EC2 .\nIf you cannot see an Amazon EC2 instance, then your Region may be incorrect. In the top-right of the screen, pull-down the Region menu and select the region that you noted at the start of the lab (for example, N. Virginia).\n   In the Instance state menu, choose Stop instance.\n  In the Stop instance window, choose Stop.\nThe instance will enter the stopping state and will shutdown.\n   In the Services menu, choose S3.\n  You don\u0026rsquo;t see any buckets although you pre-created because user-2 does not have permission to access Amazon S3.\n  Close your private browser window.  Lab complete  Congratulations! You have completed the lab.\nSummary Congratulations! You now have successfully:\n Exploring IAM Users and Groups Inspecting IAM policies and attach to the created groups Following a real-world scenario, adding users to groups with specific capabilities enabled Locating and using the IAM sign-in URL Experimenting with the effects of policies on service access  "
},
{
	"uri": "/2-level/2.1-level-0/2.1.1-createusergroupandattachpolicies/",
	"title": "Create Users, User Groups and Attach Policies",
	"tags": [],
	"description": "",
	"content": "AWS Identity and Access Management (IAM) is a web service that enables Amazon Web Services (AWS) customers to manage users and user permissions in AWS. With IAM, you can centrally manage users, security credentials such as access keys, and permissions that control which AWS resources users can access.\nTopics covered This lab will demonstrate:\n Exploring IAM Users and Groups Inspecting IAM policies and attach to the created groups Following a real-world scenario, adding users to groups with specific capabilities enabled Locating and using the IAM sign-in URL Experimenting with the effects of policies on service access   AWS Identity and Access Management\nAWS Identity and Access Management (IAM) can be used to:\n  Manage IAM Users and their access: You can create Users and assign them individual security credentials (access keys, passwords, and multi-factor authentication devices). You can manage permissions to control which operations a User can perform.\n  Manage IAM Roles and their permissions: An IAM Role is similar to a User, in that it is an AWS identity with permission policies that determine what the identity can and cannot do in AWS. However, instead of being uniquely associated with one person, a Role is intended to be assumable by anyone who needs it.\n  Manage federated users and their permissions: You can enable identity federation to allow existing users in your enterprise to access the AWS Management Console, to call AWS APIs and to access resources, without the need to create an IAM User for each identity.\n  Duration\nThis lab takes approximately 30 minutes to complete.\n Accessing the AWS Management Console   Access to https://console.aws.amazon.com.\n  Sign in by Root user or IAM User.\n   Task 1: Create Users and Groups In this task, you need to create Users and Groups in IAM.\n In the AWS Management Console, on the Services menu, select IAM.\n  In the navigation panel on the left, choose Users and Add users.\nWe need to create 3 IAM users:\n  user-1\n  user-2\n  user-3\n     Add 3 users, select checkbox Password - AWS Management Console access and uncheck checkbox Users must create a new password at next sign-in as below picture.\nSelect Next: Permissions.\n  Select Next: Tags.  Select Next: Review.  Select Create users.  Download .csv for save. Then Close.   Choose user-1.\nThis will bring to a summary page for user-1. The Permissions tab will be displayed.\n  Notice that user-1 does not have any permissions.\n  Choose the Groups tab.\nuser-1 also is not a member of any groups.\n  Choose the Security credentials tab.\nuser-1 is assigned a Console password\n  In the navigation pane on the left, choose User groups and Create group.\nWe need to create 3 IAM Groups:\n  EC2-Admin\n  EC2-Support\n  S3-Support\n    Enter S3-Support to textbox User group name.   Scroll down and enter S3 to textbox Filter policies and Enter to search.\nCheck to AmazonS3ReadOnlyAccess and select Create group.\nThis group has a Managed Policy associated with it, called AmazonEC2ReadOnlyAccess. Managed Policies are pre-built policies (built either by AWS or by your administrators) that can be attached to IAM Users and Groups. When the policy is updated, the changes to the policy are immediately apply against all Users and Groups that are attached to the policy.\n  Using similar steps to the ones above, create EC2-Admin with AmazonEC2FullAccess.  And EC2-Support with AmazonEC2ReadOnlyAccess.   When filter policies, can choose the plus (+) icon next to the AmazonEC2ReadOnlyAccess policy to view the policy details.\nNote: A policy defines what actions are allowed or denied for specific AWS resources.\nThis policy is granting permission to List and Describe information about EC2, Elastic Load Balancing, CloudWatch and Auto Scaling. This ability to view resources, but not modify them, is ideal for assigning to a Support role.\nThe basic structure of the statements in an IAM Policy is:\n  Effect says whether to Allow or Deny the permissions.\n  Action specifies the API calls that can be made against an AWS Service (eg cloudwatch:ListMetrics).\n  Resource defines the scope of entities covered by the policy rule (eg a specific Amazon S3 bucket or Amazon EC2 instance, or * which means any resource).\n  Choose the minus icon (-) to hide the policy details.\n  In the navigation pane on the left, choose User groups to view list of user groups.   Business Scenario For the remainder of this lab, you will work with these Users and Groups to enable permissions supporting the following business scenario:\nYour company is growing its use of Amazon Web Services, and is using many Amazon EC2 instances and a great deal of Amazon S3 storage. You wish to give access to new staff depending upon their job function:\n   User In Group Permissions     user-1 S3-Support Read-Only access to Amazon S3   user-2 EC2-Support Read-Only access to Amazon EC2   user-3 EC2-Admin Full Access to Amazon EC2     Task 2: Add Users to Groups You have recently hired user-1 into a role where they will provide support for Amazon S3. You will add them to the S3-Support group so that they inherit the necessary permissions via the attached AmazonS3ReadOnlyAccess policy.\n Add user-1 to the S3-Support Group  In the left navigation pane, choose User groups.\n  Choose the S3-Support group.\n  Choose the Users tab.\n  In the Users tab, choose Add users.\n   In the Add Users to S3-Support window, configure the following:\nSelect user-1.\nAt the bottom of the screen, choose Add Users.\nIn the Users tab you will see that user-1 has been added to the group.\n   Add user-2 to the EC2-Support Group You have hired user-2 into a role where they will provide support for Amazon EC2.\n Using similar steps to the ones above, add user-2 to the EC2-Support group.\nuser-2 should now be part of the EC2-Support group.\n   Add user-3 to the EC2-Admin Group You have hired user-3 as your Amazon EC2 administrator, who manage your EC2 instances.\n Using similar steps to the ones above, add user-3 to the EC2-Admin group.\nuser-3 should now be part of the EC2-Admin group.\n  In the navigation pane on the left, choose User groups.\nEach Group should now have a 1 in the Users column for the number of Users in each Group.\nIf you do not have a 1 beside each group, revisit the above instructions above to ensure that each user is assigned to a User group, as shown in the table in the Business Scenario section.\n   Task 3: Create an EC2 Instance In this task, you need to create an EC2 instance to test permission of IAM User.\n In the AWS Management Console, on the Services menu, select EC2.\n  In the page, on the Launch instance panel, select Launch instance and Launch instance.\n   In this task, we only create an EC2 instance with minimum customize.\nWe need to focus only 2 field:\n  Tag Name\n  Process without keypair\n  Then select Launch instance.\n   Task 4: Create a S3 bucket In this task, you need to create a S3 bucket to test permission of IAM User.\n In the AWS Management Console, on the Services menu, select S3.\n  In the page, on the Create a bucket panel, select Create bucket.\n   In this task, we only create a S3 bucket with minimum customize.\nWe need to focus only 1 field:\n Name of bucket  Then scroll down and select Create bucket.\n   Task 5: Sign-In and Test Users In this task, you will test the permissions of each IAM User.\n In the AWS Management Console, on the Services menu, select IAM.\n  In the navigation pane on the left, choose Dashboard.\nAn IAM users sign-in link is displayed on the right. It will look similar to: https://123456789012.signin.aws.amazon.com/console\nThis link can be used to sign-in to the AWS Account you are currently using.\n   Copy the Sign-in URL for IAM users in this account.\n  Open a private (Incognito) window.\nMozilla Firefox\n Choose the menu bars at the top-right of the screen Select New private window  Google Chrome\n Choose the ellipsis at the top-right of the screen Select New Incognito Window  Microsoft Edge\n Choose the ellipsis at the top-right of the screen Choose New InPrivate window  Microsoft Internet Explorer\n Choose the Tools menu option Choose InPrivate Browsing    Paste the Sign-in URL for IAM users in this account link into the address bar of your private browser session and press Enter.\nNext, you will sign-in as user-1, who has been hired as your Amazon S3 storage support staff.\n  Sign-in with:\n  IAM user name: user-1\n  Password: Open file credential.csv which downloaded.\n    In the Services menu, choose S3.\n  Choose the name of the bucket that exists in the account and browse the contents.\nSince your user is part of the S3-Support Group in IAM, they have permission to view a list of Amazon S3 buckets and the contents.\nNote: The bucket does not contain any objects.\nNow, test whether they have access to Amazon EC2.\n   In the Services menu, choose EC2.\n  In the left navigation pane, choose Instances.\nYou cannot see any instances. Instead, you see a message that states You are not authorized to perform this operation. This is because this user has not been granted any permissions to access Amazon EC2.\nYou will now sign-in as user-2, who has been hired as your Amazon EC2 support person.\n   Sign user-1 out of the AWS Management Console by completing the following actions:\n  At the top of the screen, choose user-1\n  Choose Sign Out\n     Paste the IAM users sign-in link into your private browser tab\u0026rsquo;s address bar and press Enter.\n  Sign-in with:\n  IAM user name: user-2\n  Password: Open file credential.csv which downloaded.\n    In the Services menu, choose EC2.\n  In the navigation pane on the left, choose Instances.\nYou are now able to see an Amazon EC2 instance because you have Read Only permissions. However, you will not be able to make any changes to Amazon EC2 resources.\nIf you cannot see an Amazon EC2 instance, then your Region may be incorrect. In the top-right of the screen, pull-down the Region menu and select the region that you noted at the start of the lab (for example, N. Virginia).\n   Select the instance named Viet-AWS EC2. In the Instance state menu above, select Stop instance.\n  In the Stop Instance window, select Stop.\nYou will receive an error stating You are not authorized to perform this operation. This demonstrates that the policy only allows you to view information, without making changes.\n   Choose the X to close the Failed to stop the instance message.\nNext, check if user-2 can access Amazon S3.\n  In the Services, choose S3.\nYou don\u0026rsquo;t see any buckets although you pre-created because user-2 does not have permission to access Amazon S3.\nYou will now sign-in as user-3, who has been hired as your Amazon EC2 administrator.\n   Sign user-2 out of the AWS Management Console by completing the following actions:\n  At the top of the screen, choose user-2\n  Choose Sign Out\n    Paste the IAM users sign-in link into your private window and press Enter.\n  Sign-in with:\n  IAM user name: user-3\n  Password: Open file credential.csv which downloaded.\n    In the Services menu, choose EC2.\n  In the navigation pane on the left, choose Instances.\nAs an EC2 Administrator, you should now have permissions to Stop the Amazon EC2 instance.\nSelect the instance named Viet-AWS EC2 .\nIf you cannot see an Amazon EC2 instance, then your Region may be incorrect. In the top-right of the screen, pull-down the Region menu and select the region that you noted at the start of the lab (for example, N. Virginia).\n   In the Instance state menu, choose Stop instance.\n  In the Stop instance window, choose Stop.\nThe instance will enter the stopping state and will shutdown.\n   In the Services menu, choose S3.\n  You don\u0026rsquo;t see any buckets although you pre-created because user-2 does not have permission to access Amazon S3.\n  Close your private browser window.  Lab complete  Congratulations! You have completed the lab.\nSummary Congratulations! You now have successfully:\n Exploring IAM Users and Groups Inspecting IAM policies and attach to the created groups Following a real-world scenario, adding users to groups with specific capabilities enabled Locating and using the IAM sign-in URL Experimenting with the effects of policies on service access  "
},
{
	"uri": "/3-contenttype/3.1-gettingstartedguides/3.1.1-createusergroupandattachpolicies/",
	"title": "Create Users, User Groups and Attach Policies",
	"tags": [],
	"description": "",
	"content": "AWS Identity and Access Management (IAM) is a web service that enables Amazon Web Services (AWS) customers to manage users and user permissions in AWS. With IAM, you can centrally manage users, security credentials such as access keys, and permissions that control which AWS resources users can access.\nTopics covered This lab will demonstrate:\n Exploring IAM Users and Groups Inspecting IAM policies and attach to the created groups Following a real-world scenario, adding users to groups with specific capabilities enabled Locating and using the IAM sign-in URL Experimenting with the effects of policies on service access   AWS Identity and Access Management\nAWS Identity and Access Management (IAM) can be used to:\n  Manage IAM Users and their access: You can create Users and assign them individual security credentials (access keys, passwords, and multi-factor authentication devices). You can manage permissions to control which operations a User can perform.\n  Manage IAM Roles and their permissions: An IAM Role is similar to a User, in that it is an AWS identity with permission policies that determine what the identity can and cannot do in AWS. However, instead of being uniquely associated with one person, a Role is intended to be assumable by anyone who needs it.\n  Manage federated users and their permissions: You can enable identity federation to allow existing users in your enterprise to access the AWS Management Console, to call AWS APIs and to access resources, without the need to create an IAM User for each identity.\n  Duration\nThis lab takes approximately 30 minutes to complete.\n Accessing the AWS Management Console   Access to https://console.aws.amazon.com.\n  Sign in by Root user or IAM User.\n   Task 1: Create Users and Groups In this task, you need to create Users and Groups in IAM.\n In the AWS Management Console, on the Services menu, select IAM.\n  In the navigation panel on the left, choose Users and Add users.\nWe need to create 3 IAM users:\n  user-1\n  user-2\n  user-3\n     Add 3 users, select checkbox Password - AWS Management Console access and uncheck checkbox Users must create a new password at next sign-in as below picture.\nSelect Next: Permissions.\n  Select Next: Tags.  Select Next: Review.  Select Create users.  Download .csv for save. Then Close.   Choose user-1.\nThis will bring to a summary page for user-1. The Permissions tab will be displayed.\n  Notice that user-1 does not have any permissions.\n  Choose the Groups tab.\nuser-1 also is not a member of any groups.\n  Choose the Security credentials tab.\nuser-1 is assigned a Console password\n  In the navigation pane on the left, choose User groups and Create group.\nWe need to create 3 IAM Groups:\n  EC2-Admin\n  EC2-Support\n  S3-Support\n    Enter S3-Support to textbox User group name.   Scroll down and enter S3 to textbox Filter policies and Enter to search.\nCheck to AmazonS3ReadOnlyAccess and select Create group.\nThis group has a Managed Policy associated with it, called AmazonEC2ReadOnlyAccess. Managed Policies are pre-built policies (built either by AWS or by your administrators) that can be attached to IAM Users and Groups. When the policy is updated, the changes to the policy are immediately apply against all Users and Groups that are attached to the policy.\n  Using similar steps to the ones above, create EC2-Admin with AmazonEC2FullAccess.  And EC2-Support with AmazonEC2ReadOnlyAccess.   When filter policies, can choose the plus (+) icon next to the AmazonEC2ReadOnlyAccess policy to view the policy details.\nNote: A policy defines what actions are allowed or denied for specific AWS resources.\nThis policy is granting permission to List and Describe information about EC2, Elastic Load Balancing, CloudWatch and Auto Scaling. This ability to view resources, but not modify them, is ideal for assigning to a Support role.\nThe basic structure of the statements in an IAM Policy is:\n  Effect says whether to Allow or Deny the permissions.\n  Action specifies the API calls that can be made against an AWS Service (eg cloudwatch:ListMetrics).\n  Resource defines the scope of entities covered by the policy rule (eg a specific Amazon S3 bucket or Amazon EC2 instance, or * which means any resource).\n  Choose the minus icon (-) to hide the policy details.\n  In the navigation pane on the left, choose User groups to view list of user groups.   Business Scenario For the remainder of this lab, you will work with these Users and Groups to enable permissions supporting the following business scenario:\nYour company is growing its use of Amazon Web Services, and is using many Amazon EC2 instances and a great deal of Amazon S3 storage. You wish to give access to new staff depending upon their job function:\n   User In Group Permissions     user-1 S3-Support Read-Only access to Amazon S3   user-2 EC2-Support Read-Only access to Amazon EC2   user-3 EC2-Admin Full Access to Amazon EC2     Task 2: Add Users to Groups You have recently hired user-1 into a role where they will provide support for Amazon S3. You will add them to the S3-Support group so that they inherit the necessary permissions via the attached AmazonS3ReadOnlyAccess policy.\n Add user-1 to the S3-Support Group  In the left navigation pane, choose User groups.\n  Choose the S3-Support group.\n  Choose the Users tab.\n  In the Users tab, choose Add users.\n   In the Add Users to S3-Support window, configure the following:\nSelect user-1.\nAt the bottom of the screen, choose Add Users.\nIn the Users tab you will see that user-1 has been added to the group.\n   Add user-2 to the EC2-Support Group You have hired user-2 into a role where they will provide support for Amazon EC2.\n Using similar steps to the ones above, add user-2 to the EC2-Support group.\nuser-2 should now be part of the EC2-Support group.\n   Add user-3 to the EC2-Admin Group You have hired user-3 as your Amazon EC2 administrator, who manage your EC2 instances.\n Using similar steps to the ones above, add user-3 to the EC2-Admin group.\nuser-3 should now be part of the EC2-Admin group.\n  In the navigation pane on the left, choose User groups.\nEach Group should now have a 1 in the Users column for the number of Users in each Group.\nIf you do not have a 1 beside each group, revisit the above instructions above to ensure that each user is assigned to a User group, as shown in the table in the Business Scenario section.\n   Task 3: Create an EC2 Instance In this task, you need to create an EC2 instance to test permission of IAM User.\n In the AWS Management Console, on the Services menu, select EC2.\n  In the page, on the Launch instance panel, select Launch instance and Launch instance.\n   In this task, we only create an EC2 instance with minimum customize.\nWe need to focus only 2 field:\n  Tag Name\n  Process without keypair\n  Then select Launch instance.\n   Task 4: Create a S3 bucket In this task, you need to create a S3 bucket to test permission of IAM User.\n In the AWS Management Console, on the Services menu, select S3.\n  In the page, on the Create a bucket panel, select Create bucket.\n   In this task, we only create a S3 bucket with minimum customize.\nWe need to focus only 1 field:\n Name of bucket  Then scroll down and select Create bucket.\n   Task 5: Sign-In and Test Users In this task, you will test the permissions of each IAM User.\n In the AWS Management Console, on the Services menu, select IAM.\n  In the navigation pane on the left, choose Dashboard.\nAn IAM users sign-in link is displayed on the right. It will look similar to: https://123456789012.signin.aws.amazon.com/console\nThis link can be used to sign-in to the AWS Account you are currently using.\n   Copy the Sign-in URL for IAM users in this account.\n  Open a private (Incognito) window.\nMozilla Firefox\n Choose the menu bars at the top-right of the screen Select New private window  Google Chrome\n Choose the ellipsis at the top-right of the screen Select New Incognito Window  Microsoft Edge\n Choose the ellipsis at the top-right of the screen Choose New InPrivate window  Microsoft Internet Explorer\n Choose the Tools menu option Choose InPrivate Browsing    Paste the Sign-in URL for IAM users in this account link into the address bar of your private browser session and press Enter.\nNext, you will sign-in as user-1, who has been hired as your Amazon S3 storage support staff.\n  Sign-in with:\n  IAM user name: user-1\n  Password: Open file credential.csv which downloaded.\n    In the Services menu, choose S3.\n  Choose the name of the bucket that exists in the account and browse the contents.\nSince your user is part of the S3-Support Group in IAM, they have permission to view a list of Amazon S3 buckets and the contents.\nNote: The bucket does not contain any objects.\nNow, test whether they have access to Amazon EC2.\n   In the Services menu, choose EC2.\n  In the left navigation pane, choose Instances.\nYou cannot see any instances. Instead, you see a message that states You are not authorized to perform this operation. This is because this user has not been granted any permissions to access Amazon EC2.\nYou will now sign-in as user-2, who has been hired as your Amazon EC2 support person.\n   Sign user-1 out of the AWS Management Console by completing the following actions:\n  At the top of the screen, choose user-1\n  Choose Sign Out\n     Paste the IAM users sign-in link into your private browser tab\u0026rsquo;s address bar and press Enter.\n  Sign-in with:\n  IAM user name: user-2\n  Password: Open file credential.csv which downloaded.\n    In the Services menu, choose EC2.\n  In the navigation pane on the left, choose Instances.\nYou are now able to see an Amazon EC2 instance because you have Read Only permissions. However, you will not be able to make any changes to Amazon EC2 resources.\nIf you cannot see an Amazon EC2 instance, then your Region may be incorrect. In the top-right of the screen, pull-down the Region menu and select the region that you noted at the start of the lab (for example, N. Virginia).\n   Select the instance named Viet-AWS EC2. In the Instance state menu above, select Stop instance.\n  In the Stop Instance window, select Stop.\nYou will receive an error stating You are not authorized to perform this operation. This demonstrates that the policy only allows you to view information, without making changes.\n   Choose the X to close the Failed to stop the instance message.\nNext, check if user-2 can access Amazon S3.\n  In the Services, choose S3.\nYou don\u0026rsquo;t see any buckets although you pre-created because user-2 does not have permission to access Amazon S3.\nYou will now sign-in as user-3, who has been hired as your Amazon EC2 administrator.\n   Sign user-2 out of the AWS Management Console by completing the following actions:\n  At the top of the screen, choose user-2\n  Choose Sign Out\n    Paste the IAM users sign-in link into your private window and press Enter.\n  Sign-in with:\n  IAM user name: user-3\n  Password: Open file credential.csv which downloaded.\n    In the Services menu, choose EC2.\n  In the navigation pane on the left, choose Instances.\nAs an EC2 Administrator, you should now have permissions to Stop the Amazon EC2 instance.\nSelect the instance named Viet-AWS EC2 .\nIf you cannot see an Amazon EC2 instance, then your Region may be incorrect. In the top-right of the screen, pull-down the Region menu and select the region that you noted at the start of the lab (for example, N. Virginia).\n   In the Instance state menu, choose Stop instance.\n  In the Stop instance window, choose Stop.\nThe instance will enter the stopping state and will shutdown.\n   In the Services menu, choose S3.\n  You don\u0026rsquo;t see any buckets although you pre-created because user-2 does not have permission to access Amazon S3.\n  Close your private browser window.  Lab complete  Congratulations! You have completed the lab.\nSummary Congratulations! You now have successfully:\n Exploring IAM Users and Groups Inspecting IAM policies and attach to the created groups Following a real-world scenario, adding users to groups with specific capabilities enabled Locating and using the IAM sign-in URL Experimenting with the effects of policies on service access  "
},
{
	"uri": "/1-category/",
	"title": "Filter by Category",
	"tags": [],
	"description": "",
	"content": "Lists  Security, Identity \u0026amp; Compliance  "
},
{
	"uri": "/3-contenttype/3.1-gettingstartedguides/",
	"title": "Getting Started Guides",
	"tags": [],
	"description": "",
	"content": "Lists  Create Users, User Groups and Attach Policies  "
},
{
	"uri": "/2-level/2.1-level-0/",
	"title": "Level 0",
	"tags": [],
	"description": "",
	"content": "Lists  Create Users, User Groups and Attach Policies  "
},
{
	"uri": "/1-category/1.1-securityidentitycompliance/",
	"title": "Security, Identity &amp; Compliance",
	"tags": [],
	"description": "",
	"content": "Lists  Create Users, User Groups and Attach Policies  "
},
{
	"uri": "/2-level/",
	"title": "Filter by Level",
	"tags": [],
	"description": "",
	"content": "Lists  Level 0  "
},
{
	"uri": "/3-contenttype/",
	"title": "Filter by Content Type",
	"tags": [],
	"description": "",
	"content": "Lists  Getting Started Guides  "
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]